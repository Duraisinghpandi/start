{"ast":null,"code":"import { User } from \"src/Models/User\";\nimport { EventEmitter } from \"@angular/core\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./logger.services\";\nclass UserService {\n  constructor(logService) {\n    this.logService = logService;\n    this.users = [new User('Steve', 'male', 'Monthly', 'Active'), new User('Ponting', 'male', 'Monthly', 'Active'), new User('Pandi', 'male', 'Monthly', 'Active')];\n    this.onUserDetailsClick = new EventEmitter();\n  }\n  getAllUsers() {\n    return this.users;\n  }\n  createUser(name, gender, subType, status) {\n    let user = new User(name, gender, subType, status);\n    this.users.push(user);\n    this.logService.logMessage(name, status);\n  }\n  // removeUser(user: User) {\n  //     const index = this.users.indexOf(user);\n  //     if (index !== -1) {\n  //         this.users.splice(index, 1);\n  //     }\n  // }\n  removeUser(user) {\n    this.users = this.users.filter(value => value !== user);\n  }\n  onShowDetails(user) {\n    this.onUserDetailsClick.emit(user);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.LoggerService));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac\n});\nexport { UserService };","map":{"version":3,"names":["User","EventEmitter","UserService","constructor","logService","users","onUserDetailsClick","getAllUsers","createUser","name","gender","subType","status","user","push","logMessage","removeUser","filter","value","onShowDetails","emit","i0","ɵɵinject","i1","LoggerService","factory","ɵfac"],"sources":["/home/dsadmin/Downloads/angular-16-complete-course-main/08-angular-services-dependency-injection/start/src/app/Services/user.service.ts"],"sourcesContent":["import { User } from \"src/Models/User\";\nimport { LoggerService } from \"./logger.services\";\nimport { EventEmitter, Injectable } from \"@angular/core\";\n@Injectable()\nexport class UserService{\n    users:User []=[\nnew User('Steve','male','Monthly','Active'),\nnew User('Ponting','male','Monthly','Active'),\nnew User('Pandi','male','Monthly','Active'),\n    ]\n    constructor(private logService:LoggerService){\n\n    }\n    onUserDetailsClick:EventEmitter<User>=new EventEmitter<User>()\ngetAllUsers(){\n    return this.users\n}\ncreateUser(name:string,\n    gender:string,\n    subType:string,\n    status:string){\nlet user=new User(name,gender,subType,status)\nthis.users.push(user)\n\nthis.logService.logMessage(name,status)\n}\n// removeUser(user: User) {\n//     const index = this.users.indexOf(user);\n//     if (index !== -1) {\n//         this.users.splice(index, 1);\n//     }\n// }\nremoveUser(user:User){\n    this.users=this.users.filter((value)=> value !== user)\n}\nonShowDetails(user:User){\n    this.onUserDetailsClick.emit(user)\n\n}\n} "],"mappings":"AAAA,SAASA,IAAI,QAAQ,iBAAiB;AAEtC,SAASC,YAAY,QAAoB,eAAe;;;AACxD,MACaC,WAAW;EAMpBC,YAAoBC,UAAwB;IAAxB,KAAAA,UAAU,GAAVA,UAAU;IAL9B,KAAAC,KAAK,GAAS,CAClB,IAAIL,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EAC3C,IAAIA,IAAI,CAAC,SAAS,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,EAC7C,IAAIA,IAAI,CAAC,OAAO,EAAC,MAAM,EAAC,SAAS,EAAC,QAAQ,CAAC,CACtC;IAID,KAAAM,kBAAkB,GAAoB,IAAIL,YAAY,EAAQ;EAD9D;EAEJM,WAAWA,CAAA;IACP,OAAO,IAAI,CAACF,KAAK;EACrB;EACAG,UAAUA,CAACC,IAAW,EAClBC,MAAa,EACbC,OAAc,EACdC,MAAa;IACjB,IAAIC,IAAI,GAAC,IAAIb,IAAI,CAACS,IAAI,EAACC,MAAM,EAACC,OAAO,EAACC,MAAM,CAAC;IAC7C,IAAI,CAACP,KAAK,CAACS,IAAI,CAACD,IAAI,CAAC;IAErB,IAAI,CAACT,UAAU,CAACW,UAAU,CAACN,IAAI,EAACG,MAAM,CAAC;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACAI,UAAUA,CAACH,IAAS;IAChB,IAAI,CAACR,KAAK,GAAC,IAAI,CAACA,KAAK,CAACY,MAAM,CAAEC,KAAK,IAAIA,KAAK,KAAKL,IAAI,CAAC;EAC1D;EACAM,aAAaA,CAACN,IAAS;IACnB,IAAI,CAACP,kBAAkB,CAACc,IAAI,CAACP,IAAI,CAAC;EAEtC;;AAlCaX,WAAW,C;mBAAXA,WAAW,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;AAAXtB,WAAW,C;SAAXA,WAAW;EAAAuB,OAAA,EAAXvB,WAAW,CAAAwB;AAAA;SAAXxB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}